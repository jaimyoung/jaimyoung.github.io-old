<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[STATKWON]]></title>
  <link href="http://Jaimyoung.github.io/atom.xml" rel="self"/>
  <link href="http://Jaimyoung.github.io/"/>
  <updated>2014-09-21T02:31:11-07:00</updated>
  <id>http://Jaimyoung.github.io/</id>
  <author>
    <name><![CDATA[Jaimyoung Kwon]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[DSBP: Reproducible and Collaborative Data Science]]></title>
    <link href="http://Jaimyoung.github.io/blog/2014/09/21/dsbp-reproducible-and-collaborative-data-science/"/>
    <updated>2014-09-21T01:32:43-07:00</updated>
    <id>http://Jaimyoung.github.io/blog/2014/09/21/dsbp-reproducible-and-collaborative-data-science</id>
    <content type="html"><![CDATA[<p>Although not quite in its full form, Professor Culich and Stark are on to something in their effor to
move forward &ldquo;Reproducible and Collaborative Data Science&rdquo;.
Some highlights are:</p>

<ul>
<li>Starting with good overview in
<a href="http://berkeleysciencereview.com/reproducible-collaborative-data-science/">The Berkeley Science Review</a>,</li>
<li><a href="https://github.com/stat157/fall-2013/blob/master/topic-sketch.md">&ldquo;STAT 157&rdquo; topics</a>. (definitely not a semester-long material; maybe 2 years?)</li>
</ul>


<p>Looking forward to the more effort in answering this question:</p>

<blockquote><p>What should stat students need to learn for &ldquo;Data Science&rdquo;?</p></blockquote>

<p>Maybe something in light of this <a href="https://www.kaggle.com/forums/t/7034/data-scientist-cognius-profitable-startup-in-cambridge-ma/39041">slightly tounge-in-cheek job posting</a>.</p>

<p>[1] <a href="https://www.google.com/search?q=Reproducible+and+Collaborative+Data+Science&amp;oq=Reproducible+and+Collaborative+Data+Science&amp;aqs=chrome..69i57j69i61.407j0j4&amp;sourceid=chrome&amp;es_sm=91&amp;ie=UTF-8">Some more google results on &ldquo;reproducible and collaborative data science&rdquo;</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DSTC: Python]]></title>
    <link href="http://Jaimyoung.github.io/blog/2014/09/21/dstc-python/"/>
    <updated>2014-09-21T01:17:17-07:00</updated>
    <id>http://Jaimyoung.github.io/blog/2014/09/21/dstc-python</id>
    <content type="html"><![CDATA[<p>On Mac OSX, I found it easiest to work with
<a href="http://continuum.io/downloads">Anaconda distribution</a>.
This includes, among others, the entire stack of
<a href="http://www.scipy.org/">SciPy</a> stack.</p>

<h3>Style guide</h3>

<p>I like this quote:</p>

<blockquote><p>Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live.
<cite>Quoted by Damin Conway in <a href="http://stackoverflow.com/questions/876089/who-wrote-this-programing-saying-always-code-as-if-the-guy-who-ends-up-maintai">Perl Best Practices</a></cite></p></blockquote>

<p>Like a programmer who avoids the violent psycopath,
it benefits researchers greatly in the long run
when they learn to stick to good coding practice.
One of them is of course a style guie.
I found Google&rsquo;s guide to be useful for languages we use primarily:</p>

<ul>
<li><a href="https://google-styleguide.googlecode.com/svn/trunk/pyguide.html">Google&rsquo;s Python style guide</a>

<ul>
<li>pylint is good but see below is good.</li>
</ul>
</li>
<li><a href="https://google-styleguide.googlecode.com/svn/trunk/Rguide.xml">Google&rsquo;s R style guide</a>

<ul>
<li><a href="http://r-pkgs.had.co.nz/style.html">Hadley Wickham R style guide</a></li>
</ul>
</li>
</ul>


<h3>pylint</h3>

<p>It&rsquo;s a personal and team&rsquo;s choice but default pylint config could be too aggressive.
I found this to be reasonable.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat ~/.pylintrc
</span><span class='line'><span class="o">[</span>MESSAGES CONTROL<span class="o">]</span>
</span><span class='line'><span class="nv">disable</span><span class="o">=</span>W0403,R0904
</span><span class='line'><span class="o">[</span>BASIC<span class="o">]</span>
</span><span class='line'><span class="c"># Regular expression which should only match correct variable names</span>
</span><span class='line'><span class="c"># variable-rgx=[a-z_][a-z0-9_]{2,30}$</span>
</span><span class='line'>variable-rgx<span class="o">=[</span>a-z_<span class="o">][</span>a-z0-9_<span class="o">]{</span>0,30<span class="o">}</span><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>This setup will be globally applied to any python.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DSTC: Sublime Text Editor]]></title>
    <link href="http://Jaimyoung.github.io/blog/2014/09/21/dstc-sublime-text-editor/"/>
    <updated>2014-09-21T01:14:36-07:00</updated>
    <id>http://Jaimyoung.github.io/blog/2014/09/21/dstc-sublime-text-editor</id>
    <content type="html"><![CDATA[<p>To start, first download sublime text 3.
Then install a few useful packages:</p>

<ol>
<li>Install package control</li>
<li>Install bunch of packages:

<ol>
<li>sublimelinter</li>
<li>sublimelinter-pylint (see below)</li>
<li>markdown-extended</li>
<li>monokai-extended (and enable it)</li>
<li>git gutter</li>
</ol>
</li>
</ol>


<p>Default settings work well, but one might want to change the &ldquo;user&rdquo; setting
for handling tabs:</p>

<pre><code>"translate_tabs_to_spaces": true
"tab_size": 4,
"detect_indentation": true,
</code></pre>

<p>Syntax specific changes in tab_size is also useful. For *.R for example:</p>

<pre><code>"tab_size": 4,
</code></pre>

<h3>Sublimelinter + pylint + anaconda python on Mac OSX conundrum</h3>

<p>Mac OSX Path for python in sublime is messed up by default.
Default pylint install leads to:</p>

<pre><code>SublimeLinter: WARNING: no pylint version could be extracted from:
Traceback (most recent call last):
  File "/usr/local/bin/pylint", line 5, in &lt;module&gt;
    from pkg_resources import load_entry_point
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py", line 2603, in &lt;module&gt;
    working_set.require(__requires__)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py", line 666, in require
    needed = self.resolve(parse_requirements(requirements))
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py", line 565, in resolve
    raise DistributionNotFound(req)  # XXX put more info here
pkg_resources.DistributionNotFound: pylint==1.3.1
</code></pre>

<p>Add the following to sublimelinter-user:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;user&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'>        <span class="s2">&quot;paths&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s2">&quot;linux&quot;</span><span class="o">:</span> <span class="p">[],</span>
</span><span class='line'>            <span class="s2">&quot;osx&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="s2">&quot;/Users/jaimiekwon/anaconda/bin/&quot;</span>
</span><span class='line'>            <span class="p">],</span>
</span><span class='line'>            <span class="s2">&quot;windows&quot;</span><span class="o">:</span> <span class="p">[]</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s2">&quot;python_paths&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s2">&quot;linux&quot;</span><span class="o">:</span> <span class="p">[],</span>
</span><span class='line'>            <span class="s2">&quot;osx&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>                <span class="s2">&quot;/Users/jaimiekwon/anaconda/bin/&quot;</span>
</span><span class='line'>            <span class="p">],</span>
</span><span class='line'>            <span class="s2">&quot;windows&quot;</span><span class="o">:</span> <span class="p">[]</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dive Into Jekyll/Octopress + Github Pages]]></title>
    <link href="http://Jaimyoung.github.io/blog/2014/09/21/dive-into-jekyll-slash-octopress-plus-github-pages/"/>
    <updated>2014-09-21T00:50:40-07:00</updated>
    <id>http://Jaimyoung.github.io/blog/2014/09/21/dive-into-jekyll-slash-octopress-plus-github-pages</id>
    <content type="html"><![CDATA[<p>I found Google&rsquo;s Blogger to be tiring in writing workflow.
I looked into a few options:</p>

<ul>
<li>Blogger (working harder!)

<ul>
<li>Pros: Familar google workflow, most of times; analytics out-of-box.</li>
<li>Cons: Slow. Not flexible.</li>
</ul>
</li>
<li>Wordpress

<ul>
<li>Pros: Popular.</li>
<li>Cons: Slow.</li>
</ul>
</li>
<li>Github (md only), or even Gist?

<ul>
<li>Pros: Markdown is already my friend.</li>
<li>Cons: This is not blog.</li>
</ul>
</li>
<li>Github Pages, via Jekyll

<ul>
<li>Pros: Markdown is already my friend; speed; geek credential.</li>
<li>Cons: Initial investment. Too flexible / too many options.</li>
</ul>
</li>
<li>Github Pages, via Jekyll/Octopress

<ul>
<li>Pros: Markdown is already my friend; speed; geek credential; setup is more automatic than Jekyll only option.</li>
<li>Cons: Slightly overweight than Jekyll only.</li>
</ul>
</li>
</ul>


<p>From a few factors, I chose &ldquo;Github Pages with Jekyll/Octopress&rdquo; option,
after trying out a bit with Jekyll (no Octopress) option.</p>

<p>So far, so good.</p>

<h2>TODO:</h2>

<ol>
<li>Turn on Discus Comment</li>
<li>Maybe make letters smaller?</li>
<li>Turn on Google analytics</li>
<li>Migrating old blogger.

<ol>
<li>To-do. Will follow <a href="http://import.jekyllrb.com/docs/blogger/">http://import.jekyllrb.com/docs/blogger/</a></li>
</ol>
</li>
</ol>


<h2>Caveats</h2>

<p>If using oh-my-zsh, rake gives zsh: no matches found error all the time. Add this to .zsh</p>

<pre><code>alias rake='noglob rake'
</code></pre>

<p><a href="https://www.linkedin.com/in/statkwon">https://www.linkedin.com/in/statkwon</a></p>

<pre><code>rake new_post["Dive into Jekyll/Octopress + Github Pages"] 
rake new_page[""]
rake new_page[about]
rake new_page[super-awesome]
# creates /source/super-awesome/index.markdown
</code></pre>

<p>Workflow</p>

<pre><code>rake generate   # Generates posts and pages into the public directory
rake watch      # Watches source/ and sass/ for changes and regenerates
rake preview    # Watches, and mounts a webserver at http://localhost:4000
</code></pre>

<p>Deploy/publish</p>

<pre><code>rake generate
rake deploy
</code></pre>

<h2>Links</h2>

<ul>
<li><a href="http://octopress.org/docs/deploying/github/">http://octopress.org/docs/deploying/github/</a></li>
<li>Tag cloud + category list <a href="https://github.com/tokkonopapa/octopress-tagcloud">https://github.com/tokkonopapa/octopress-tagcloud</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
